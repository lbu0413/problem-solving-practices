// 세 수 중 최솟값
// 100이하의 자연수 A, B, C를 입력받아 세 수 중 가장 작은 값을 출력하는 프로그램을 작성하세요.(정렬을 사용하면 안됩니다)

function solution1(a, b, c) {
	return Math.min(a, b, c);
}

console.log("solution1 :", solution1(6, 5, 11));

// 삼각형 판별하기
// 길이가 서로 다른 A, B, C 세 개의 막대 길이가 주어지면 이 세 막대로 삼각형을 만들 수 있
// 으면 “YES"를 출력하고, 만들 수 없으면 ”NO"를 출력한다.
// ▣ 입력설명
// 첫 번째 줄에 100이하의 서로 다른 A, B, C 막대의 길이가 주어진다.
// ▣ 출력설명
// 첫 번째 줄에 “YES", "NO"를 출력한다.
// ▣ 입력예제 1
// 6 7 11
// ▣ 출력예제 1
// YES
// ▣ 입력예제 1
// 13 33 17
// ▣ 출력예제 1
// NO

function solution2(a, b, c) {
	let max = Math.max(a, b, c);
	if (max < a + b + c - max) return "YES";
	else return "NO";
}

console.log("solution2: ", solution2(6, 7, 11));

// 연필 개수
// 연필 1 다스는 12자루입니다. 학생 1인당 연필을 1자루씩 나누어 준다고 할 때 N명이 학생수
// 를 입력하면 필요한 연필의 다스 수를 계산하는 프로그램을 작성하세요.
// ▣ 입력설명
// 첫 번째 줄에 1000 이하의 자연수 N이 입력된다.
// ▣ 출력설명
// 첫 번째 줄에 필요한 다스 수를 출력합니다.
// ▣ 입력예제 1
// 25
// ▣ 출력예제 1
// 3
// ▣ 입력예제 2
// 178
// ▣ 출력예제 2
// 15

function solution3(s) {
	return Math.ceil(s / 12);
}

console.log("solution3: ", solution3(178));

// 1부터 N까지 합 출력하기
// 자연수 N이 입력되면 1부터 N까지의 합을 출력하는 프로그램을 작성하세요.
// ▣ 입력설명
// 첫 번째 줄에 20이하의 자연수 N이 입력된다..
// ▣ 출력설명
// 첫 번째 줄에 1부터 N까지의 합을 출력한다.
// ▣ 입력예제 1
// 6
// ▣ 출력예제 1
// 21
// ▣ 입력예제 2
// 10
// ▣ 출력예제 2
// 55

function solution4(s) {
	let answer = 0;
	for (let i = 1; i <= s; i++) {
		answer += i;
	}
	return answer;
}

console.log("soltuion4: ", solution4(10));

// 최솟값 구하기
// 7개의 수가 주어지면 그 숫자 중 가장 작은 수를 출력하는 프로그램을 작성하세요.
// ▣ 입력설명
// 첫 번째 줄에 7개의 수가 주어진다.
// ▣ 출력설명
// 첫 번째 줄에 가장 작은 값을 출력한다.
// ▣ 입력예제 1
// 5 3 7 11 2 15 17
// ▣ 출력예제 1
// 2

function solution5(arr) {
	return Math.min(...arr);
}

console.log("solution5: ", solution5([5, 3, 7, 11, 2, 15, 17]));

// 홀수
// 7개의 자연수가 주어질 때, 이들 중 홀수인 자연수들을 모두 골라 그 합을 구하고, 고른 홀수들
// 중 최소값을 찾는 프로그램을 작성하세요.
// 예를 들어, 7개의 자연수 12, 77, 38, 41, 53, 92, 85가 주어지면 이들 중 홀수는 77, 41, 53,
// 85이므로 그 합은
// 77 + 41 + 53 + 85 = 256
// 이 되고,
// 41 < 53 < 77 < 85
// 이므로 홀수들 중 최소값은 41이 된다.
// ▣ 입력설명
// 첫 번째 줄에 자연수 7개가 주어진다. 주어지는 자연수는 100보다 작다. 홀수가 한 개 이상
// 반드시 존재한다.
// ▣ 출력설명
// 첫째 줄에 홀수들의 합을 출력하고, 둘째 줄에 홀수들 중 최소값을 출력한다.
// ▣ 입력예제 1
// 12 77 38 41 53 92 85
// ▣ 출력예제 1
// 256
// 41

function solution6(arr) {
	let sum = 0;
	let min = Number.MAX_SAFE_INTEGER;
	for (let i of arr) {
		if (i % 2 !== 0) {
			if (i < min) {
				min = i;
			}
			sum += i;
		}
	}
	return [sum, min];
}

console.log("solution6: ", solution6([12, 77, 38, 41, 53, 92, 85]));
